{
    "$schema": "http://json-schema.org/draft-07/schema",
    "required": [
        "laceworkConfig"
    ],
    "properties": {
        "global": {
            "type": "object",
            "$comment": "Blanket 'global' object to enable embedding this chart as a sub-chart"
        },
        "daemonset": {
            "type:": "object",
            "properties": {
                "affinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Affinity",
                    "description": "If specified, the pod's scheduling constraints"
                },
                "updateStrategy": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.DaemonSetUpdateStrategy",
                    "description": "An update strategy to replace existing DaemonSet pods with new pods."
                }
            },
            "required": [
                "affinity",
                "updateStrategy"
            ],
            "additionalProperties": false
        },
        "image": {
            "type": "object",
            "properties": {
                "imagePullSecrets": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                    },
                    "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                },
                "pullPolicy": {
                    "type": "string",
                    "enum": [
                        "Always",
                        "IfNotPresent",
                        "Never"
                    ],
                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present"
                },
                "registry": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "required": [
                "pullPolicy",
                "registry",
                "repository",
                "tag"
            ],
            "additionalProperties": false
        },
        "clusterAgent": {
            "type": "object",
            "required": [
                "image",
                "enable",
                "clusterType",
                "scrapeInitialDelayMins",
                "scrapeIntervalMins"
            ],
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "imagePullSecrets": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                            },
                            "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "enum": [
                                "Always",
                                "IfNotPresent",
                                "Never"
                            ],
                            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present"
                        },
                        "registry": {
                            "type": "string"
                        },
                        "repository": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "pullPolicy",
                        "registry",
                        "repository",
                        "tag"
                    ],
                    "additionalProperties": false
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable cluster agent"
                },
                "clusterType": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "enum": [
                        "eks",
                        "unknown",
                        null
                    ],
                    "description": "Kubernetes cluster type"
                },
                "clusterRegion": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Kubernetes cluster cloud region"
                },
                "scrapeInitialDelayMins": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "description": "Cluster mode agent's initial delay of cluster scraping after startup in minutes"
                },
                "scrapeIntervalMins": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "description": "Cluster mode agent's scrape interval in minutes"
                }
            },
            "additionalProperties": false
        },
        "laceworkConfig": {
            "type": "object",
            "required": [
                "accessToken"
            ],
            "properties": {
                "accessToken": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object",
                            "required": [
                                "existingSecret"
                            ],
                            "properties": {
                                "existingSecret": {
                                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
                                    "description": "Selects a key of a secret in the pod's namespace"
                                }
                            }
                        }
                    ]
                },
                "annotations": {
                    "additionalProperties": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                    "type": [
                        "object",
                        "null"
                    ]
                },
                "autoUpgrade": {
                    "type": "string",
                    "enum": [
                        "disable",
                        "enable"
                    ]
                },
                "datacollector": {
                    "type": "string",
                    "enum": [
                        "disable",
                        "enable"
                    ]
                },
                "k8sNodeScrapeIntervalMins": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "description": "Kubernetes node's scrape interval in minutes"
                },
                "kubernetesCluster": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "labels": {
                    "additionalProperties": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                    "type": [
                        "object",
                        "null"
                    ]
                },
                "env": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "fim": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "coolingPeriod",
                        "crawlInterval",
                        "enable",
                        "fileIgnore",
                        "filePath",
                        "noAtime",
                        "runAt"
                    ],
                    "properties": {
                        "coolingPeriod": {
                            "minimum": 0,
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "crawlInterval": {
                            "minimum": 0,
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        "enable": {
                            "type": "boolean"
                        },
                        "fileIgnore": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "filePath": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "noAtime": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "runAt": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "pattern": "^[0-9]{2}:[0-9]{2}$"
                                }
                            ]
                        }
                    }
                },
                "proxyUrl": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "serverUrl": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(https://.*.lacework.net|http://.*.svc.cluster.local)$"
                },
                "serviceAccountName": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "stdoutLogging": {
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "resources": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
            "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
        },
        "priorityClassName": {
            "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
            "type": [
                "string",
                "null"
            ]
        },
        "tolerations": {
            "description": "If specified, the pod's tolerations.",
            "items": {
                "$ref": "#/definitions/io.k8s.api.core.v1.Toleration",
                "description": "If specified, the pod's tolerations."
            },
            "type": [
                "array",
                "null"
            ]
        }
    },
    "additionalProperties": false,
    "definitions": {
        "io.k8s.api.core.v1.Affinity": {
            "description": "Affinity is a group of affinity scheduling rules.",
            "properties": {
                "nodeAffinity": {
                    "description": "Node affinity is a group of node affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                "properties": {
                                    "preference": {
                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "A list of node selector requirements by node's labels.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchFields": {
                                                "description": "A list of node selector requirements by node's fields.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": "object",
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "preference"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
                            "properties": {
                                "nodeSelectorTerms": {
                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                    "items": {
                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "A list of node selector requirements by node's labels.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchFields": {
                                                "description": "A list of node selector requirements by node's fields.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "nodeSelectorTerms"
                            ],
                            "type": [
                                "object",
                                "null"
                            ],
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                },
                "podAffinity": {
                    "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                "properties": {
                                    "podAffinityTerm": {
                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                        "properties": {
                                            "labelSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaceSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "items": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "topologyKey"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "podAffinityTerm"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                            "items": {
                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                "properties": {
                                    "labelSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaceSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "items": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "type": [
                                            "array",
                                            "null"
                                        ]
                                    },
                                    "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "topologyKey"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                },
                "podAntiAffinity": {
                    "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                "properties": {
                                    "podAffinityTerm": {
                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                        "properties": {
                                            "labelSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaceSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "items": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "topologyKey"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "podAffinityTerm"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                            "items": {
                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                "properties": {
                                    "labelSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaceSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "items": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "type": [
                                            "array",
                                            "null"
                                        ]
                                    },
                                    "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "topologyKey"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                }
            },
            "type": "object",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.DaemonSetUpdateStrategy": {
            "description": "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.",
            "properties": {
                "rollingUpdate": {
                    "description": "Spec to control the desired behavior of daemon set rolling update.",
                    "properties": {
                        "maxSurge": {
                            "oneOf": [
                                {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                }
                            ]
                        },
                        "maxUnavailable": {
                            "oneOf": [
                                {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                }
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                },
                "type": {
                    "description": "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.\n\nPossible enum values:\n - `\"OnDelete\"` Replace the old daemons only when it's killed\n - `\"RollingUpdate\"` Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.",
                    "enum": [
                        "OnDelete",
                        "RollingUpdate"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.LocalObjectReference": {
            "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.ResourceRequirements": {
            "description": "ResourceRequirements describes the compute resource requirements.",
            "properties": {
                "limits": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            {
                                "type": [
                                    "number",
                                    "null"
                                ]
                            }
                        ]
                    },
                    "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": [
                        "object",
                        "null"
                    ]
                },
                "requests": {
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            {
                                "type": [
                                    "number",
                                    "null"
                                ]
                            }
                        ]
                    },
                    "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": [
                        "object",
                        "null"
                    ]
                }
            },
            "type": "object",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.SecretKeySelector": {
            "description": "SecretKeySelector selects a key of a Secret.",
            "properties": {
                "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": [
                        "boolean",
                        "null"
                    ]
                }
            },
            "required": [
                "key"
            ],
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.Toleration": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
            "properties": {
                "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
                    "enum": [
                        "NoExecute",
                        "NoSchedule",
                        "PreferNoSchedule"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "operator": {
                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
                    "enum": [
                        "Equal",
                        "Exists"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "value": {
                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        }
    }
}
