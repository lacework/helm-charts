# Default values for Lacework Agent.
image:
  registry: docker.io
  repository: lacework/datacollector
  tag: 5.9.0
  # imagePullPolicy should be Always to get the latest container
  # http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  pullPolicy: Always
  # [Optional] imagePullSecrets.
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  # imagePullSecrets:
  #   - name: CustomerRegistrKeySecretName
resources:
  # The requests/limits is guidance and should be adjusted based on the workload
  # Please contact Lacework support for additional details
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
  # https://support.lacework.com/hc/en-us/articles/360047019354-Usage-Impact-of-Agent-Deployment
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1450Mi
clusterAgent:
  # [Optional] Should we install cluster agent.
  enable: false
  # [Optional] Cluster type.
  clusterType: unknown
  # [Optional] Cluster region.
  clusterRegion:
  # [Optional] Cluster mode agent's initial delay of cluster scraping after startup in minutes.
  scrapeInitialDelayMins:
  # [Optional] Cluster mode agent's scrape interval in minutes.
  scrapeIntervalMins:
  image:
    registry: docker.io
    repository: lacework/k8scollector
    tag: latest
    # imagePullPolicy should be Always to get the latest container
    # http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: Always
    # [Optional] imagePullSecrets.
    # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    # imagePullSecrets:
    #   - name: CustomerRegistrKeySecretName
laceworkConfig:
  # [Required] An access token is required before running agents.
  # Visit https://<LACEWORK UI URL> for eg: https://lacework.lacework.net
  accessToken:
  # [Optional] Define custom annotations to use for identifying resources created by these charts
  annotations: {}
  # [Optional] Define custom labels to use for identifying resources created by these charts
  labels: {}
  # [Optional] Set to "disable" to disable autoupgrade of the datacollector
  autoUpgrade: enable
  # [Optional] Give your k8s environment a friendly name
  env:
  # [Optional] Set to "disable" to not run datacollector
  datacollector: enable
  # [Optional] Kubernetes node's scrape interval in minutes.
  k8sNodeScrapeIntervalMins:
  # [Optional] Configure File Integrity Monitoring
  # https://docs.lacework.com/configure-agent-behavior-in-configjson-file#file-integrity-monitoring-fim-properties
  fim:
    # [Optional] Configure coolingperiod in minutes
    coolingPeriod:
    # [Optional] Configure crawlinterval in minutes
    crawlInterval:
    enable: true
    # [Optional] Configure file paths to ignore
    fileIgnore: []
    # [Optional] Configure file paths to include
    filePath: []
    # [Optional] Set to true to prevent atime from being used in metadata hash computation
    noAtime:
    # [Optional] Run the FIM scan interval at the specifid time of the day (HH:MM)
    runAt:
  # [Optional] Kubernetes cluster name
  # https://support.lacework.com/hc/en-us/articles/360005263034-Deploy-on-Kubernetes
  kubernetesCluster:
  # [Optional] Route agent traffic through the specified proxy.
  proxyUrl:
  # [Optional] Specify the service account for agent pods
  serviceAccountName:
  # [Required] Region specific Lacework service URL. Defaults to the US region.
  serverUrl: https://api.lacework.net
  # [Optional] Set to false to prevent agent from sending diagnostic logs to stdout
  stdoutLogging: true
##########################################################################
# Set daemonset priorityClassName
priorityClassName:
# Allow Lacework agent to run on all nodes including master and infra nodes
tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node-role.kubernetes.io/infra
# Allow Lacework agent to run on all nodes in case of a taint
# - effect: NoSchedule
#   operator: Exists

daemonset:
  # Use rolling updates in the DaemonSet
  # https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
  updateStrategy:
    type: RollingUpdate
  # DaemonSet to schedule using affinity rules
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
